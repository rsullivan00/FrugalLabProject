package view;

import java.awt.FlowLayout;
import java.util.List;

import javax.swing.JDesktopPane;

import model.ProjectSummary;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

import controller.SearchProjectController;

public class ChartView extends javax.swing.JInternalFrame {
	private SearchProjectController searchProjectController;
    /**
     * Creates new form ChatView
     */
    public ChartView(JDesktopPane dp) {
        initComponents();
        setClosable(true);
        searchProjectController = new SearchProjectController(dp);
        ChartPanel barChart = new ChartPanel(generateBarChart());
        barChartTab.setLayout(new FlowLayout());
        barChartTab.add(barChart,FlowLayout.LEFT);
        ChartPanel pieChart = new ChartPanel(generatePieChart());
        pieChartTab.setLayout(new FlowLayout());
        pieChartTab.add(pieChart,FlowLayout.LEFT);
        pieChart.validate();
        barChart.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        chartPanel = new javax.swing.JPanel();
        chartTabbedPane = new javax.swing.JTabbedPane();
        pieChartTab = new javax.swing.JPanel();
        barChartTab = new javax.swing.JPanel();

        javax.swing.GroupLayout pieChartTabLayout = new javax.swing.GroupLayout(pieChartTab);
        pieChartTab.setLayout(pieChartTabLayout);
        pieChartTabLayout.setHorizontalGroup(
            pieChartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 668, Short.MAX_VALUE)
        );
        pieChartTabLayout.setVerticalGroup(
            pieChartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        chartTabbedPane.addTab("Pie Chart", pieChartTab);

        javax.swing.GroupLayout barChartTabLayout = new javax.swing.GroupLayout(barChartTab);
        barChartTab.setLayout(barChartTabLayout);
        barChartTabLayout.setHorizontalGroup(
            barChartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 668, Short.MAX_VALUE)
        );
        barChartTabLayout.setVerticalGroup(
            barChartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        chartTabbedPane.addTab("Bar Chart", barChartTab);

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTabbedPane))
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartTabbedPane))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        
    // Variables declaration - do not modify
    
    public JFreeChart generatePieChart() {
        DefaultPieDataset dataSet = new DefaultPieDataset();
        List<ProjectSummary> summary = searchProjectController.getProjectDistribution();
        System.out.println("Summary Size"+summary.size());
    	for(ProjectSummary p:summary){
    		dataSet.setValue(p.getStatus(), p.getPercentage());
    	}
        
        JFreeChart chart = ChartFactory.createPieChart("Project Status Ratio", dataSet);
 
        return chart;
    }
    
    public JFreeChart generateBarChart() {
        DefaultCategoryDataset dataSet = new DefaultCategoryDataset();
        List<ProjectSummary> summary = searchProjectController.getProjectDistribution();
        System.out.println("Summary Size"+summary.size());
    	for(ProjectSummary p:summary){
    		dataSet.setValue(p.getPercentage(), "Percentage", p.getStatus());
    	}
        
 
        JFreeChart chart = ChartFactory.createBarChart("Project Status Ratio", "Project Status", "# of Projects(%)",dataSet, PlotOrientation.VERTICAL, false, true, false);
 
        return chart;
    }
    
    private javax.swing.JPanel barChartTab;
    private javax.swing.JPanel chartPanel;
    private javax.swing.JTabbedPane chartTabbedPane;
    private javax.swing.JPanel pieChartTab;
    // End of variables declaration                   
}  