package view;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.util.List;
import java.util.Vector;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JDesktopPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import model.Project;
import controller.ProjectController;
import controller.ProjectProperties;
import controller.SearchProjectController;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Soumya
 */
public class SearchProjectView extends javax.swing.JInternalFrame {
	private ProjectController projectController;
	private SearchProjectController searchProjectController;
	private ProjectProperties properties = new ProjectProperties();
	private JDesktopPane desktop;
	private ProjectView pv;
	JTable jt;
	
    /**
     * Creates new form SearchProjectView
     */
    public SearchProjectView(JDesktopPane desktop) {
        initComponents();
        this.desktop = desktop;
        searchProjectController = new SearchProjectController(desktop);
        projectController = new ProjectController(desktop);
        jt = new JTable();
        jt.setModel(getProjectTable(projectController.getAllProjectList()));
    	JScrollPane scrollpane = new JScrollPane(jt);
    	projectListTable.setLayout(new BorderLayout());
    	projectListTable.add(scrollpane, BorderLayout.CENTER);
    	Action view = new AbstractAction() {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                int id = ((Integer) table.getValueAt(modelRow, 0));
                showProjectView(id);
            }
        };

        ButtonColumn viewButtonColumn = new ButtonColumn(jt, view, 6);

        if (ProjectProperties.isAdminMode) {
            Action delete = new AbstractAction() {
                public void actionPerformed(ActionEvent e) {
                    JTable table = (JTable) e.getSource();
                    int modelRow = Integer.valueOf(e.getActionCommand());
                    int id = ((Integer) table.getValueAt(modelRow, 0));
                    /* Update DB */
                    deleteProject(id);
                    /* Update table */
                    ((DefaultTableModel) table.getModel()).removeRow(modelRow);
                }
            };

            ButtonColumn deleteButtonColumn = new ButtonColumn(jt, delete, 7);
        }
    	/*Action delete = new AbstractAction() {
			public void actionPerformed(ActionEvent e) {
				System.out.println("action performed ");
				 JTable table = (JTable)e.getSource();
		         int modelRow = Integer.valueOf( e.getActionCommand() );
		         ((DefaultTableModel)table.getModel()).removeRow(modelRow);
				
			}
		};
		 
		 Action view = new AbstractAction()
		 {
		     public void actionPerformed(ActionEvent e)
		     {
		    	 JTable table = (JTable)e.getSource();
		         int modelRow = Integer.valueOf( e.getActionCommand() );
		         ((DefaultTableModel)table.getModel()).removeRow(modelRow);
		     }
		 };
		 if(ProjectProperties.isAdminMode) { 
			 ButtonColumn deleteColumn = new ButtonColumn(jt, delete, 7);
		 }
		 ButtonColumn viewColumn = new ButtonColumn(jt, view, 6);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        projectListPanel = new javax.swing.JPanel();
        projectListTable = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblSearchProject = new javax.swing.JLabel();
        txtSearchCriteria = new javax.swing.JTextField();
        comboSearchBy = new javax.swing.JComboBox();
        btnSearchProjects = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser1.setVisible(false);

        projectListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Project List"));
        setClosable(true);
        setResizable(true);
        javax.swing.GroupLayout projectListTableLayout = new javax.swing.GroupLayout(projectListTable);
        projectListTable.setLayout(projectListTableLayout);
        projectListTableLayout.setHorizontalGroup(
            projectListTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        projectListTableLayout.setVerticalGroup(
            projectListTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout projectListPanelLayout = new javax.swing.GroupLayout(projectListPanel);
        projectListPanel.setLayout(projectListPanelLayout);
        projectListPanelLayout.setHorizontalGroup(
            projectListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, projectListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectListTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        projectListPanelLayout.setVerticalGroup(
            projectListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(projectListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(projectListTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Projects"));

        lblSearchProject.setText("Search");

        txtSearchCriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchCriteriaActionPerformed(evt);
            }
        });

        comboSearchBy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Project Name", "Status", "Start Date", "End Date", "Participant Name", "Participant Role", "Category","All" }));
        comboSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSearchByActionPerformed(evt);
            }
        });

        btnSearchProjects.setIcon(new javax.swing.ImageIcon(properties.getAbsolutePath()+"\\src\\images\\search.png"));
        btnSearchProjects.setText("Search");
        btnSearchProjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProjectsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(lblSearchProject, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comboSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearchProjects)
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSearchProject, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnSearchProjects)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(projectListPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(projectListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void txtSearchCriteriaActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
    }                                                 

    private void comboSearchByActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if(comboSearchBy.getSelectedIndex()==2 ||comboSearchBy.getSelectedIndex()==3){
        	jDateChooser1.setVisible(true);
        	txtSearchCriteria.setVisible(false);
        }else{
        	jDateChooser1.setVisible(false);
        	txtSearchCriteria.setVisible(true);
        }
    }                                             

    private void btnSearchProjectsActionPerformed(java.awt.event.ActionEvent evt) { 
    	int searchCase = comboSearchBy.getSelectedIndex();
    	System.out.println(searchCase);
    	switch(searchCase){
    		case 0:
    			loadProjectListTable(searchProjectController.searchProjectByName(txtSearchCriteria.getText()));
    			break;
    		case 1:
    			loadProjectListTable(searchProjectController.searchProjectByStatus(txtSearchCriteria.getText()));
    			break;
			case 2:
				loadProjectListTable(searchProjectController.searchProjectByDate(jDateChooser1.getDate(),true));
				break;
			case 3:
				loadProjectListTable(searchProjectController.searchProjectByDate(jDateChooser1.getDate(),false));
				break;
			case 4:
				loadProjectListTable(searchProjectController.searchProjectByParticipantName(txtSearchCriteria.getText()));
				break;
			case 5:
				loadProjectListTable(searchProjectController.searchProjectByCategory(txtSearchCriteria.getText()));
				break;
			default :
				loadProjectListTable(projectController.getAllProjectList());
    	}
    } 
  
    
    public void loadProjectListTable(List<Project> plist){
    	jt.setModel(getProjectTable(plist));
    	Action view = new AbstractAction() {
            public void actionPerformed(ActionEvent e)
            {
                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                int id = ((Integer) table.getValueAt(modelRow, 0));
                showProjectView(id);
            }
        };

        ButtonColumn viewButtonColumn = new ButtonColumn(jt, view, 6);

        if (ProjectProperties.isAdminMode) {
            Action delete = new AbstractAction() {
                public void actionPerformed(ActionEvent e) {
                    JTable table = (JTable) e.getSource();
                    int modelRow = Integer.valueOf(e.getActionCommand());
                    int id = ((Integer) table.getValueAt(modelRow, 0));
                    /* Update DB */
                    deleteProject(id);
                    /* Update table */
                    ((DefaultTableModel) table.getModel()).removeRow(modelRow);
                }
            };

            ButtonColumn deleteButtonColumn = new ButtonColumn(jt, delete, 7);
        }
    	System.out.println(plist.size());
    }
    public DefaultTableModel getProjectTable(List<Project> plist){
        Vector<String> columnNames = new Vector<String>();
        columnNames.add("ID");
        columnNames.add("Name");
        columnNames.add("Status");
        columnNames.add("Start Date");
        columnNames.add("End Date");
        columnNames.add("Location");
        if (ProjectProperties.isAdminMode) {
            columnNames.add("View/Edit");
            columnNames.add("Delete");
        } else {
            columnNames.add("View");
        }
        final Vector<Vector> projectList = new Vector<Vector>();

        for(final Project project: plist){
            Vector<Object> rowData = new Vector<Object>();
            rowData.add(project.getProjectID());
            rowData.add(project.getProjectName());
            rowData.add(project.getStatus());
            rowData.add(project.getStartDate());
            rowData.add(project.getEndDate());
            rowData.add(project.getCountry());
            if(ProjectProperties.isAdminMode){
                rowData.add("View/Edit");
                rowData.add("Delete");
            } else {
                rowData.add("View");
            }

            projectList.add(rowData);
        }

        DefaultTableModel model = new DefaultTableModel(projectList, columnNames);
        return model;
    }
    public void showProjectView(int id){
		 System.out.println("view "+id);
		 Project project = projectController.getProjectDetailsById(id);
		 System.out.println();
		 ProjectView projectView = new ProjectView(project);
		 this.getParent().add(projectView);
		 projectView.show();
	 }
	 
	 public void deleteProject(int id){
		 System.out.println("delete "+id);
		 System.out.println(projectController.deleteProjectById(id));
		 //searchProjectController.updateTableModel(projectService.getAllProjects());
	 }
    // Variables declaration - do not modify                     
    private javax.swing.JButton btnSearchProjects;
    private javax.swing.JComboBox comboSearchBy;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblSearchProject;
    private javax.swing.JPanel projectListPanel;
    private javax.swing.JPanel projectListTable;
    private javax.swing.JTextField txtSearchCriteria;
    // End of variables declaration                   
}

