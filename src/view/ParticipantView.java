/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.ParticipantController;
import controller.ProjectProperties;
import model.Participant;
import model.Project;
import model.Role;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;

/**
 *  ParticipantView.java
 *  Created by Rick Sullivan on 5/27/2014.
 *
 *  The ParticipantView shows and allows editing of a single Participant.
 */
public class ParticipantView extends javax.swing.JInternalFrame {
    private ParticipantController controller;
    private Participant participant;

    /**
     * Creates new form ParticipantView
     */
    public ParticipantView(Participant participant) {
        this.participant = participant;
        controller = new ParticipantController(this);
        initComponents();
        comboRole.setSelectedIndex(participant != null ? participant.getRole() - 1 : -1);
        btnAddProj.setVisible(false);
    }

    public ParticipantView() {
        this(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PersistenceUnitEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("PersistenceUnit").createEntityManager();
        roleQuery = java.beans.Beans.isDesignTime() ? null : PersistenceUnitEntityManager.createQuery("SELECT r FROM role r");
        roleList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : roleQuery.getResultList();
        participantPanel = new javax.swing.JPanel();
        lblParticipantFirstName = new javax.swing.JLabel();
        lblParticipantRole = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        comboRole = new javax.swing.JComboBox();
        btnAddImage = new javax.swing.JButton();
        lblPhotoURL = new javax.swing.JLabel();
        participantOptionsPanel = new javax.swing.JPanel();
        btnAddProj = new javax.swing.JButton();
        btnSaveParticipant = new javax.swing.JButton();
        btnDeleteParticipant = new javax.swing.JButton();
        participantDependencyTab = new javax.swing.JTabbedPane();
        participantProjectPane = new javax.swing.JScrollPane();
        projectTable = getProjectTable();

        setClosable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(805, 330));

        participantPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Participant Details"));
        participantPanel.setName(""); // NOI18N

        lblParticipantFirstName.setText("First Name");

        lblParticipantRole.setText("Last Name");

        lblStartDate.setText("Role");

        lblPhoto.setText("Photo");

        txtFirstName.setText(participant != null ? participant.getFirstName() : null);

        txtLastName.setText(participant != null ? participant.getLastName() : null);

        final Vector<String> roleNames = new Vector<String>();
        for (Role role : roleList) {
                roleNames.add(role.getName());
        }

        comboRole.setModel(new DefaultComboBoxModel<String>(roleNames));
        comboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRoleActionPerformed(evt);
            }
        });

        btnAddImage.setIcon(UIManager.getIcon("FileChooser.directoryIcon"));
        btnAddImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddImageActionPerformed(evt);
            }
        });

        lblPhotoURL.setText(participant != null ? participant.getPhotoURL() : null);
        lblPhotoURL.setMaximumSize(new java.awt.Dimension(240, 16));
        lblPhotoURL.setMinimumSize(new java.awt.Dimension(240, 16));
        lblPhotoURL.setPreferredSize(new java.awt.Dimension(240, 16));

        btnAddProj.setText("Add to Project");
        btnAddProj.setFocusable(false);
        btnAddProj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProjActionPerformed(evt);
            }
        });

        btnSaveParticipant.setText("Save Participant");
        btnSaveParticipant.setFocusable(false);
        btnSaveParticipant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveParticipantActionPerformed(evt);
            }
        });

        btnDeleteParticipant.setText("Delete Participant");
        btnDeleteParticipant.setFocusable(false);
        btnDeleteParticipant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteParticipantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout participantOptionsPanelLayout = new javax.swing.GroupLayout(participantOptionsPanel);
        participantOptionsPanel.setLayout(participantOptionsPanelLayout);
        participantOptionsPanelLayout.setHorizontalGroup(
            participantOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(participantOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(participantOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSaveParticipant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteParticipant, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(btnAddProj, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        participantOptionsPanelLayout.setVerticalGroup(
            participantOptionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(participantOptionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSaveParticipant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteParticipant)
                .addGap(18, 18, 18)
                .addComponent(btnAddProj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout participantPanelLayout = new javax.swing.GroupLayout(participantPanel);
        participantPanel.setLayout(participantPanelLayout);
        participantPanelLayout.setHorizontalGroup(
            participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(participantPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblParticipantFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblParticipantRole, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblStartDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFirstName)
                    .addComponent(comboRole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, participantPanelLayout.createSequentialGroup()
                        .addComponent(lblPhotoURL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddImage, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(participantOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        participantPanelLayout.setVerticalGroup(
            participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(participantPanelLayout.createSequentialGroup()
                .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(participantPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblParticipantFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(participantPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParticipantRole, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(participantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhotoURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddImage, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(234, 234, 234))
            .addGroup(participantPanelLayout.createSequentialGroup()
                .addComponent(participantOptionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        participantOptionsPanel.setVisible(ProjectProperties.isAdminMode);

        participantDependencyTab.setPreferredSize(new java.awt.Dimension(760, 100));

        participantProjectPane.setPreferredSize(new java.awt.Dimension(755, 100));

        projectTable.setAutoCreateRowSorter(true);
        projectTable.setModel(projectTable.getModel());
        participantProjectPane.setViewportView(projectTable);

        participantDependencyTab.addTab("Projects", participantProjectPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(participantPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(participantDependencyTab, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(participantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(participantDependencyTab, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteParticipantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteParticipantActionPerformed
        controller.deleteParticipant(participant.getId());
        tryToUpdateSearchPViews();
        setVisible(false);
        this.getParent().remove(this);
    }//GEN-LAST:event_btnDeleteParticipantActionPerformed

    private void btnSaveParticipantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveParticipantActionPerformed
        if (!validateFields()) {
            return;
        }
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        Role role = roleList.get(comboRole.getSelectedIndex());
        int roleId = role.getId();
        String photoURL = lblPhotoURL.getText();
        if (participant == null) {
            controller.addParticipant(firstName, lastName, roleId, photoURL);
        } else {
            controller.editParticipant(participant.getId(), firstName, lastName, roleId, photoURL);
        }
        tryToUpdateSearchPViews();
        setVisible(false);
        this.getParent().remove(this);
    }//GEN-LAST:event_btnSaveParticipantActionPerformed

    private boolean validateFields() {
        String firstName = txtFirstName.getText();
        if (firstName == "") {
            JDialog dialog = new JDialog((JFrame) SwingUtilities.getWindowAncestor(this), "First name required");
            return false;
        }
        String lastName = txtLastName.getText();
        if (lastName == "") {
            JDialog dialog = new JDialog((JFrame) SwingUtilities.getWindowAncestor(this), "Last name required");
            return false;
        }
        Role r = roleList.get(comboRole.getSelectedIndex());
        int role = r.getId();
        if (role < 0) {
            return false;
        }

        return true;
    }

    private JTable getProjectTable() {
        if (participant == null || participant.getProjects() == null) {
            return new JTable();
        }
        final Set<Project> projectSet = participant.getProjects();
        Vector<String> columnNames = new Vector<String>();
        columnNames.add("ID");
        columnNames.add("Name");
        columnNames.add("City");
        columnNames.add("Country");
        columnNames.add("Start Date");
        columnNames.add("End Date");
        columnNames.add("View");
        final Vector<Vector> projectData = new Vector<Vector>();

        for(final Project project: projectSet){
            Vector<Object> rowData = new Vector<Object>();
            rowData.add(project.getProjectID());
            rowData.add(project.getProjectName());
            rowData.add(project.getCity());
            rowData.add(project.getCountry());
            rowData.add(project.getStartDate());
            rowData.add(project.getEndDate());
            rowData.add("View");

            projectData.add(rowData);
        }

        JTable projectTable = new JTable(projectData, columnNames);

        Action view = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
                ArrayList<Project> projectList = new ArrayList<Project>(projectSet);
                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf(e.getActionCommand());
                Project p = projectList.get(modelRow);
                viewProject(p);
            }
        };

        ButtonColumn viewButtonColumn = new ButtonColumn(projectTable, view, 6);

        return projectTable;
    }

    private void viewProject(Project p) {
        ProjectView pv = new ProjectView(p);
        pv.setVisible(true);
        this.getParent().add(pv);
        pv.moveToFront();
    }

    private void tryToUpdateSearchPViews() {
        Object parent = this.getParent();
        if (parent instanceof JDesktopPane) {
            JDesktopPane mainView = (JDesktopPane) this.getParent();
            for (Component child: mainView.getComponents()) {
                if (child instanceof SearchParticipantView) {
                    SearchParticipantView view = (SearchParticipantView) child;
                    view.updateTable();
                }
            }
        }
    }

    private void btnAddImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddImageActionPerformed
        /* Open to previously selected file path */
        JFileChooser fileChooser = new JFileChooser(lblPhotoURL.getText());
        FileFilter imageFilter = new FileNameExtensionFilter(
                "Image files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);

        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                lblPhotoURL.setText(file.getCanonicalPath());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnAddImageActionPerformed

    private void comboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboRoleActionPerformed

    private void btnAddProjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProjActionPerformed

    }//GEN-LAST:event_btnAddProjActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager PersistenceUnitEntityManager;
    private javax.swing.JButton btnAddImage;
    private javax.swing.JButton btnAddProj;
    private javax.swing.JButton btnDeleteParticipant;
    private javax.swing.JButton btnSaveParticipant;
    private javax.swing.JComboBox comboRole;
    private javax.swing.JLabel lblParticipantFirstName;
    private javax.swing.JLabel lblParticipantRole;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPhotoURL;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JTabbedPane participantDependencyTab;
    private javax.swing.JPanel participantOptionsPanel;
    private javax.swing.JPanel participantPanel;
    private javax.swing.JScrollPane participantProjectPane;
    private javax.swing.JTable projectTable;
    private java.util.List<model.Role> roleList;
    private javax.persistence.Query roleQuery;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    // End of variables declaration//GEN-END:variables
}
